<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 1998-2024 Linux.org.ru
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
            http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
      ">

  <context:component-scan base-package="ru.org.linux">
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    <context:exclude-filter type="regex" expression=".*Test.*"/>
  </context:component-scan>

  <context:annotation-config/>
  <cache:annotation-driven/>

  <bean class="org.springframework.beans.factory.config.PropertiesFactoryBean" scope="singleton"
        name="properties">
    <property name="locations">
      <list>
        <value>/WEB-INF/config.properties.dist</value>
        <value>/WEB-INF/config.properties</value>
      </list>
    </property>
    <property name="ignoreResourceNotFound" value="true"/>
  </bean>

  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
        id="configurer">
    <property name="properties" ref="properties"/>
  </bean>

  <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
    <property name="driverClassName">
      <value>org.postgresql.Driver</value>
    </property>
    <property name="jdbcUrl">
      <value>${jdbc.url}</value>
    </property>
    <property name="username">
      <value>${jdbc.user}</value>
    </property>
    <property name="password">
      <value>${jdbc.password}</value>
    </property>
    <property name="maximumPoolSize" value="${jdbc.poolSize}"/>
  </bean>

  <bean id="datasource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
    <constructor-arg ref="hikariConfig" />
  </bean>

  <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="datasource"/>
  </bean>

  <tx:annotation-driven transaction-manager="txManager"/>

  <bean class="org.springframework.jdbc.core.JdbcTemplate" id="jdbcTemplate">
    <constructor-arg ref="datasource"/>
  </bean>

  <!-- enabling jmx causes tomcat stop lock -->
  <amq:broker useJmx="false" persistent="true" dataDirectory="${activemq.path}">
    <amq:transportConnectors>
      <amq:transportConnector uri="vm://localhost"/>
    </amq:transportConnectors>

    <amq:destinationPolicy>
      <amq:policyMap>
        <amq:policyEntries>
          <amq:policyEntry queue=">" prioritizedMessages="true" queuePrefetch="1" useCache="false"/>
        </amq:policyEntries>
      </amq:policyMap>
    </amq:destinationPolicy>
  </amq:broker>

  <amq:redeliveryPolicy id="redeliveryPolicy" maximumRedeliveries="-1"
                        initialRedeliveryDelay="60000">
    <property name="queue" value="*"/>
  </amq:redeliveryPolicy>

  <amq:connectionFactory id="jmsFactory" brokerURL="vm://localhost?create=false">
    <property name="redeliveryPolicy" ref="redeliveryPolicy"/>
    <property name="trustedPackages">
      <list>
        <value>ru.org.linux.search</value>
        <value>java.util</value>
        <value>java.lang</value>
        <value>scala.collection</value>
      </list>
    </property>
  </amq:connectionFactory>

  <amq:queue id="searchQueue" physicalName="lor.searchQueue"/>

  <!-- lets wrap in a pool to avoid creating a connection per send -->
  <bean
          id="jmsConnectionFactory"
          class="org.springframework.jms.connection.SingleConnectionFactory">
    <property name="targetConnectionFactory">
      <ref bean="jmsFactory"/>
    </property>
  </bean>

  <bean id="messageListener"
        class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
    <constructor-arg ref="searchQueueListener"/>
  </bean>

  <bean id="jmsContainer"
        class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    <property name="messageListener" ref="messageListener"/>
    <property name="connectionFactory" ref="jmsConnectionFactory"/>
    <property name="destination" ref="searchQueue"/>
    <property name="sessionTransacted" value="true"/>
    <property name="concurrency" value="4"/>
  </bean>

  <task:annotation-driven/>

  <bean id="cacheManager" class="org.springframework.cache.caffeine.CaffeineCacheManager"
        p:cache-specification="maximumSize=5000,expireAfterWrite=5m"/>

  <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
    <property name="locateExistingServerIfPossible" value="true"/>
  </bean>
</beans>
