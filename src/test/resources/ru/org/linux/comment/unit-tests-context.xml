<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 1998-2012 Linux.org.ru
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
    >

    <import resource="classpath:common.xml"/>

    <bean id="commentDao" name="mockCommentDao"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.comment.CommentDao"/>
    </bean>

    <bean id="ignoreListDao" name="mockIgnoreListDao"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.user.IgnoreListDao"/>
    </bean>

    <bean id="userDao" name="mockUserDao"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.user.UserDao"/>
    </bean>

    <bean id="toLorCodeFormatter" name="mockToLorCodeFormatter"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.util.formatter.ToLorCodeFormatter"/>
    </bean>

    <bean id="toLorCodeTexFormatter" name="mockToLorCodeTexFormatter"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.util.formatter.ToLorCodeTexFormatter"/>
    </bean>

    <bean id="captcha" name="mockCaptchaService"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.auth.CaptchaService"/>
    </bean>

    <bean id="tagDao" name="mockTagDao"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.tag.TagDao"/>
    </bean>

    <bean id="tagService" name="mockTagService"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.tag.TagService"/>
    </bean>

    <bean id="topicTagDao" name="mockTopicTagDao"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.topic.TopicTagDao"/>
    </bean>

    <bean id="topicTagService" name="mockTopicTagService"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.topic.TopicTagService"/>
    </bean>

    <bean id="pollDao" name="mockPollDao"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.poll.PollDao"/>
    </bean>

    <bean id="groupDao" name="mockGroupDao"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.group.GroupDao"/>
    </bean>

    <bean id="userEventService" name="mockUserEventService"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.user.UserEventService"/>
    </bean>

    <bean id="messageDao" name="mockMessageDao"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.topic.TopicDao"/>
    </bean>

    <bean id="lorCodeService" name="mockLorCodeService"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.util.bbcode.LorCodeService"/>
    </bean>

    <bean id="commentPrepareService" name="mockCommentPrepareService"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.comment.CommentPrepareService"/>
    </bean>

    <bean id="floodProtector" name="mockFloodProtector"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.auth.FloodProtector"/>
    </bean>

    <bean id="ipBlockDao" name="mockIPBlockDao"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.auth.IPBlockDao"/>
    </bean>

    <bean id="msgbaseDao" name="mockMsgbaseDao"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.spring.dao.MsgbaseDao"/>
    </bean>

    <bean id="searchQueueSender" name="mockSearchQueueSender"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.search.SearchQueueSender"/>
    </bean>

    <bean id="editHistoryService" name="mockEditHistoryService"
          class="org.mockito.Mockito" factory-method="mock">
        <constructor-arg value="ru.org.linux.edithistory.EditHistoryService"/>
    </bean>

    <bean class="ru.org.linux.comment.CommentService" id="commentService"/>

</beans>
